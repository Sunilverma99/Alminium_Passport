{"abi":[{"type":"function","name":"authorizeBackupProvider","inputs":[{"name":"provider","type":"address","internalType":"address"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"pause","inputs":[],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"sendCrossChainBackup","inputs":[{"name":"tokenId","type":"uint256","internalType":"uint256"},{"name":"destinationChain","type":"uint16","internalType":"uint16"},{"name":"destinationContract","type":"address","internalType":"address"},{"name":"payload","type":"bytes","internalType":"bytes"}],"outputs":[],"stateMutability":"payable"},{"type":"function","name":"triggerBackup","inputs":[{"name":"tokenId","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"unpause","inputs":[],"outputs":[],"stateMutability":"nonpayable"},{"type":"event","name":"BackupRequested","inputs":[{"name":"tokenId","type":"uint256","indexed":true,"internalType":"uint256"},{"name":"timestamp","type":"uint256","indexed":false,"internalType":"uint256"},{"name":"requester","type":"address","indexed":false,"internalType":"address"}],"anonymous":false},{"type":"event","name":"CrossChainBackup","inputs":[{"name":"tokenId","type":"uint256","indexed":true,"internalType":"uint256"},{"name":"destinationChain","type":"uint16","indexed":false,"internalType":"uint16"},{"name":"requester","type":"address","indexed":false,"internalType":"address"}],"anonymous":false}],"bytecode":{"object":"0x","sourceMap":"","linkReferences":{}},"deployedBytecode":{"object":"0x","sourceMap":"","linkReferences":{}},"methodIdentifiers":{"authorizeBackupProvider(address)":"618260bb","pause()":"8456cb59","sendCrossChainBackup(uint256,uint16,address,bytes)":"16237ead","triggerBackup(uint256)":"8c89499d","unpause()":"3f4ba83a"},"rawMetadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"requester\",\"type\":\"address\"}],\"name\":\"BackupRequested\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint16\",\"name\":\"destinationChain\",\"type\":\"uint16\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"requester\",\"type\":\"address\"}],\"name\":\"CrossChainBackup\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"provider\",\"type\":\"address\"}],\"name\":\"authorizeBackupProvider\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pause\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"uint16\",\"name\":\"destinationChain\",\"type\":\"uint16\"},{\"internalType\":\"address\",\"name\":\"destinationContract\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"payload\",\"type\":\"bytes\"}],\"name\":\"sendCrossChainBackup\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"triggerBackup\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"unpause\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"authorizeBackupProvider(address)\":{\"params\":{\"provider\":\"The address of the authorized backup provider.\"}},\"sendCrossChainBackup(uint256,uint16,address,bytes)\":{\"params\":{\"destinationChain\":\"The target blockchain network (LayerZero chain ID).\",\"destinationContract\":\"The target contract address on the destination chain.\",\"payload\":\"The data payload to be sent.\",\"tokenId\":\"The ID of the battery passport to backup.\"}},\"triggerBackup(uint256)\":{\"params\":{\"tokenId\":\"The ID of the battery passport to backup.\"}}},\"title\":\"IBackupManager\",\"version\":1},\"userdoc\":{\"events\":{\"BackupRequested(uint256,uint256,address)\":{\"notice\":\"Emitted when a backup request is triggered.\"},\"CrossChainBackup(uint256,uint16,address)\":{\"notice\":\"Emitted when a cross-chain backup is initiated.\"}},\"kind\":\"user\",\"methods\":{\"authorizeBackupProvider(address)\":{\"notice\":\"Grants authorization to a third-party backup provider.\"},\"pause()\":{\"notice\":\"Pauses contract operations in case of an emergency.\"},\"sendCrossChainBackup(uint256,uint16,address,bytes)\":{\"notice\":\"Sends a cross-chain backup request using LayerZero.\"},\"triggerBackup(uint256)\":{\"notice\":\"Triggers a backup for a given tokenId.\"},\"unpause()\":{\"notice\":\"Unpauses the contract.\"}},\"notice\":\"Interface for the BackupManager contract, allowing third-party providers to trigger backups.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/interfaces/IBackupManager.sol\":\"IBackupManager\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/\",\":ds-test/=lib/solmate/lib/ds-test/src/\",\":erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/\",\":forge-std/=lib/forge-std/src/\",\":halmos-cheatcodes/=lib/openzeppelin-contracts/lib/halmos-cheatcodes/src/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\",\":solmate/=lib/solmate/src/\"],\"viaIR\":true},\"sources\":{\"src/interfaces/IBackupManager.sol\":{\"keccak256\":\"0x8e9926b4b93dbed4931280bcf6b62572e2f13140883a563a4a221140b4a3fd22\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://589d1ea9272e2c0329708a7670773e60e83da88db68627edf80271b2fcac9ce0\",\"dweb:/ipfs/QmYRfWqfNfiZpERKa6uMmXcdUKct49nbAZxHjCcYNdsHuk\"]}},\"version\":1}","metadata":{"compiler":{"version":"0.8.20+commit.a1b79de6"},"language":"Solidity","output":{"abi":[{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256","indexed":true},{"internalType":"uint256","name":"timestamp","type":"uint256","indexed":false},{"internalType":"address","name":"requester","type":"address","indexed":false}],"type":"event","name":"BackupRequested","anonymous":false},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256","indexed":true},{"internalType":"uint16","name":"destinationChain","type":"uint16","indexed":false},{"internalType":"address","name":"requester","type":"address","indexed":false}],"type":"event","name":"CrossChainBackup","anonymous":false},{"inputs":[{"internalType":"address","name":"provider","type":"address"}],"stateMutability":"nonpayable","type":"function","name":"authorizeBackupProvider"},{"inputs":[],"stateMutability":"nonpayable","type":"function","name":"pause"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"uint16","name":"destinationChain","type":"uint16"},{"internalType":"address","name":"destinationContract","type":"address"},{"internalType":"bytes","name":"payload","type":"bytes"}],"stateMutability":"payable","type":"function","name":"sendCrossChainBackup"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"stateMutability":"nonpayable","type":"function","name":"triggerBackup"},{"inputs":[],"stateMutability":"nonpayable","type":"function","name":"unpause"}],"devdoc":{"kind":"dev","methods":{"authorizeBackupProvider(address)":{"params":{"provider":"The address of the authorized backup provider."}},"sendCrossChainBackup(uint256,uint16,address,bytes)":{"params":{"destinationChain":"The target blockchain network (LayerZero chain ID).","destinationContract":"The target contract address on the destination chain.","payload":"The data payload to be sent.","tokenId":"The ID of the battery passport to backup."}},"triggerBackup(uint256)":{"params":{"tokenId":"The ID of the battery passport to backup."}}},"version":1},"userdoc":{"kind":"user","methods":{"authorizeBackupProvider(address)":{"notice":"Grants authorization to a third-party backup provider."},"pause()":{"notice":"Pauses contract operations in case of an emergency."},"sendCrossChainBackup(uint256,uint16,address,bytes)":{"notice":"Sends a cross-chain backup request using LayerZero."},"triggerBackup(uint256)":{"notice":"Triggers a backup for a given tokenId."},"unpause()":{"notice":"Unpauses the contract."}},"version":1}},"settings":{"remappings":["@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/","ds-test/=lib/solmate/lib/ds-test/src/","erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/","forge-std/=lib/forge-std/src/","halmos-cheatcodes/=lib/openzeppelin-contracts/lib/halmos-cheatcodes/src/","openzeppelin-contracts/=lib/openzeppelin-contracts/","solmate/=lib/solmate/src/"],"optimizer":{"enabled":true,"runs":200},"metadata":{"bytecodeHash":"ipfs"},"compilationTarget":{"src/interfaces/IBackupManager.sol":"IBackupManager"},"evmVersion":"shanghai","libraries":{},"viaIR":true},"sources":{"src/interfaces/IBackupManager.sol":{"keccak256":"0x8e9926b4b93dbed4931280bcf6b62572e2f13140883a563a4a221140b4a3fd22","urls":["bzz-raw://589d1ea9272e2c0329708a7670773e60e83da88db68627edf80271b2fcac9ce0","dweb:/ipfs/QmYRfWqfNfiZpERKa6uMmXcdUKct49nbAZxHjCcYNdsHuk"],"license":"MIT"}},"version":1},"id":54}